#version 420


/// found in 19:49
layout(triangles , equal_spacing,ccw) in;

in  vec2 texCoord[];

out vec2 TexCoord;

uniform sampler2D diffuseMap;
uniform  mat4 projectionViewModel;

void main()
{
	//caluculate texture cooredinate
	vec2 t0 = gl_TessCoord.x * texCoord[0];
	vec2 t1 = gl_TessCoord.y * texCoord[1];
	vec2 t2 = gl_TessCoord.z * texCoord[2];

	TexCoord = t0 + t1 + t2;
	
	float disp = texture(diffuseMap,TexCoord).r;

	//calcute position

	vec4 p0 = gl_TessCoord.x * gl_in[0].gl_Position;
	vec4 p1 = gl_TessCoord.y * gl_in[1].gl_Position;
	vec4 p2 = gl_TessCoord.z * gl_in[2].gl_Position;

	vec4 position = p0 + p1 + p2;
	position.y += disp * 4;

	gl_Position = projectionViewModel * position;

}